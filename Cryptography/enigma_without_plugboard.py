class rotor():
    wire, revwire, trig, state, turn = None, None, None, 0, False

    def __init__(self, message, trigger=""):
        self.wire = [ord(x.split('-')[1])-65 for x in message.split()]
        self.revwire = [0 for x in range(26)]
        for n,i in enumerate(self.wire):self.revwire[i]=n
        if trigger == "": self.trig = -1
        else: self.trig = ord(trigger)-65

    def setState(self,char):self.state = ord(char)-65
    
    def incrot(self):self.turn = True

    def forward(self, char, val=False):
        prev = self.turn
        if val or self.turn: self.state,self.turn = (self.state + 1) % 26, False
        return chr( 65 + ( self.wire[(ord(char) - 65 + self.state) % 26] - self.state) % 26), self.state == self.trig and (prev or val)

    def backward(self, char):return chr( 65 + ( self.revwire[(ord(char) - 65 + self.state) % 26] - self.state) % 26)




class EnigmaWithoutPlugboard():
    rotor1, rotor2 , rotor3, eflector = [None for x in range(4)]

    def __init__(self, rot1, rot2, rot3, t1, t2, t3, reflec):
        self.rotor1 = rotor(rot1,t1)
        self.rotor2 = rotor(rot2,t2)
        self.rotor3 = rotor(rot3,t3)
        self.reflector = rotor(reflec)

    def encode(self, pos, message):
        r1, r2, r3 = pos.split()
        self.rotor1.setState(r1)
        self.rotor2.setState(r2)
        self.rotor3.setState(r3)
                
        output = ""
        for i in message:
            mes, turn1 = self.rotor1.forward(i,True)
            mes, turn2 = self.rotor2.forward(mes)
            if turn1:self.rotor2.incrot()
            mes, turn3 = self.rotor3.forward(mes)
            if turn2:self.rotor3.incrot();self.rotor2.incrot()
            mes,turn = self.reflector.forward(mes)
            mes = self.rotor3.backward(mes)
            mes = self.rotor2.backward(mes)
            mes = self.rotor1.backward(mes)
            output += mes
        print(output)




# Testing 
# Values for creating the enigma
Rot1 = "A-A B-J C-D D-K E-S F-I G-R H-U I-X J-B K-L L-H M-W N-T O-M P-C Q-Q R-G S-Z T-N U-P V-Y W-F X-V Y-O Z-E"
Rot2 = "A-E B-K C-M D-F E-L F-G G-D H-Q I-V J-Z K-N L-T M-O N-W O-Y P-H Q-X R-U S-S T-P U-A V-I W-B X-R Y-C Z-J"
Rot3 = "A-V B-Z C-B D-R E-G F-I G-T H-Y I-U J-P K-S L-D M-N N-H O-L P-X Q-A R-W S-M T-J U-Q V-O W-F X-E Y-C Z-K"
trig1 = "E"
trig2 = "Q"
trig3 = "Z"
reflector = "A-Y B-R C-U D-H E-Q F-S G-L H-D I-P J-X K-N L-G M-O N-K O-M P-I Q-E R-B S-F T-Z U-C V-W W-V X-J Y-A Z-T"


test = EnigmaWithoutPlugboard(Rot1, Rot2, Rot3, trig1, trig2, trig3, reflector)
message = "EODHXKGLWRIVTFXPXBRPLOOWSUIQQWJAXZTSKHQTNBVDAQFGIXLPHUCRLLYFWYUGQULEOQQQUGJMMZQIKPRTGQGWCMGRBPRDXZACQBHYQWNNRRCPKRZIOZRBCVRCHXQUFYOUICWHPYKWCNVDYWEGOLSWXGGAIMIJXEADPACBTKLLNUVIIERERQEXOBSLHXZKQUYBNMYVVHRQAHZQUUXAUOWJTHQHHNTKRQYKMHLAYUZPRYTIWHTDFACQLAWAWGCMHBLTAQPJNLQQXDISNTVQYXKUHVTHXNZQMROSUBUKWHJGIOGEFWXMJOWSXFJZBIPCHWZXYFUDVZPXCDFVTQZSXEIETRGRILUKPKKJFFISNPZCFIQOXFZGTOUUUPVACLAORNQDHAKDAXDQEWEZQSCCPUPIHOHWELLSQUIVUYYCBIPRHZAKBBUMXPQXNNXPITDJLPOYLSCOFJMYYHESZYWPPKMEVBVLMALDUGDUSTZMZWAHKAJOKYDKKIJJELKWFZWVWNRQVYUTFWALUGNNUXHUVLJHVFPRRKGGASBTHNEJPMINNGYVUXHGNWELGCSTUMCBQEWQJOAVRCPGEOQFTOMWWMCRTLMLRGXITRLYXBZEANENGAHFECEMDSXBZLVBHGNAQLJTMZKTIKZLVNDBZNPNBIQFDHNYBRTVGUVQFOYPQUVWSEMXNIPXOJHZTCQSEWSGZAKUQSCCKVVVOKEPRGJUYJYYRXMGLYHQJVAOVNDVWVTCEZLWQFMLFNYSCRCNFXNCFCMBENTMXNNQWNFNSXSMCWWLLPTMYNWFJMEGYYWFZKKYDTBIXAMXBXXUUVIYPMTRBYSNHBBQGOJKZSVATOPPOVVJCRNPHJWJKHPISHPSLMNAXYPONKTPBQGGFVFCKQOJKCBKHFLMAXXJYTNRFEFALUBMGTWWEAEFRQEZJMJIAJOYMQYMPHQQFKMKKQBEWDGMBUJVQBCAOISHNJXNSJZOWQXQRDYM"
test.encode("G P L",message)

# Output: THELICENSESFORMOSTSOFTWAREANDOTHERPRACTICALWORKSAREDESIGNEDTOTAKEAWAYYOURFREEDOMTOSHAREANDCHANGETHEWORKSBYCONTRASTTHEGNUGENERALPUBLICLICENSEISINTENDEDTOGUARANTEEYOURFREEDOMTOSHAREANDCHANGEALLVERSIONSOFAPROGRAMTOMAKESUREITREMAINSFREESOFTWAREFORALLITSUSERSWETHEFREESOFTWAREFOUNDATIONUSETHEGNUGENERALPUBLICLICENSEFORMOSTOFOURSOFTWAREITAPPLIESALSOTOANYOTHERWORKRELEASEDTHISWAYBYITSAUTHORSYOUCANAPPLYITTOYOURPROGRAMSTOOWHENWESPEAKOFFREESOFTWAREWEAREREFERRINGTOFREEDOMNOTPRICEOURGENERALPUBLICLICENSESAREDESIGNEDTOMAKESURETHATYOUHAVETHEFREEDOMTODISTRIBUTECOPIESOFFREESOFTWAREANDCHARGEFORTHEMIFYOUWISHTHATYOURECEIVESOURCECODEORCANGETITIFYOUWANTITTHATYOUCANCHANGETHESOFTWAREORUSEPIECESOFITINNEWFREEPROGRAMSANDTHATYOUKNOWYOUCANDOTHESETHINGSTOPROTECTYOURRIGHTSWENEEDTOPREVENTOTHERSFROMDENYINGYOUTHESERIGHTSORASKINGYOUTOSURRENDERTHERIGHTSTHEREFOREYOUHAVECERTAINRESPONSIBILITIESIFYOUDISTRIBUTECOPIESOFTHESOFTWAREORIFYOUMODIFYITRESPONSIBILITIESTORESPECTTHEFREEDOMOFOTHERSFOREXAMPLEIFYOUDISTRIBUTECOPIES